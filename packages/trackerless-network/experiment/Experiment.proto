syntax = "proto3";

option optimize_for = CODE_SIZE;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "packages/dht/protos/DhtRpc.proto";

service RoutingExperimentRpc {
    rpc getRoutingPath (GetRoutingPath) returns (RoutingPath);
}

message ExperimentServerMessage {
    oneof instruction {
        Start start = 1;
        JoinExperiment joinExperiment = 2;
        JoinStreamPart joinStreamPart = 3;
        PublishMessage publishMessage = 4;
        GetPropagationResults getPropagationResults = 5;
        RoutingExperiment routingExperiment = 6;
        PublishOnInterval publishOnInterval = 7;
        MeasureTimeToData MeasureTimeToData = 8;
        PingExperiment pingExperiment = 9;
        GetNeighborsRequest getNeighborsRequest = 10;
        StopNodeRequest stopNodeRequest = 11;
    }
}

message ExperimentClientMessage {
    string id = 1;
    oneof payload {
        Hello hello = 2;
        Started started = 3;
        ExperimentResults experimentResults = 4;
        InstructionCompleted instructionCompleted = 5;
        PropagationResults propagationResults = 6;
        HighMemoryAlarm highMemoryAlarm = 7;
        GetNeighborsResponse getNeighborsResponse = 8;
    }
}

message Hello {
    string ip = 1;
}

message Start {
    repeated dht.PeerDescriptor entryPoints = 1;
    bool asEntryPoint = 2;
    bool join = 3;
    optional string nodeId = 4;
    bool storeRoutingPaths = 5;
    bool storeMessagePaths = 6;
    bool startWsServer = 7;
}

message Started {
    dht.PeerDescriptor peerDescriptor = 1;
    int32 timeToJoin = 2;
}

message JoinExperiment {
    repeated dht.PeerDescriptor entryPoints = 1;
}

message RoutingExperiment {
    repeated dht.PeerDescriptor routingTargets = 1;
}

message ExperimentResults {
    string results = 1;
}

message JoinStreamPart {
    string streamPartId = 1;
    int32 neighborCount = 2;
}

message PublishMessage {
    string streamPartId = 1;
}

message GetRoutingPath {
    string id = 1;
    int64 sendTime = 2;
}

message RoutingPath {
    repeated dht.PeerDescriptor path = 1;
    int64 sendTime = 2;
    int64 timeToReceiver = 3;
}

message GetPropagationResults {
    string streamPartId = 1;
}

message PropagationResults {
    repeated string results = 1;
}

message InstructionCompleted {

}

message PublishOnInterval {
    string streamPartId = 1;
    int32 interval = 2;
}

message MeasureTimeToData {
    string streamPartId = 1;
    repeated dht.PeerDescriptor entryPoints = 2;
    bool startWsServer = 3;
}

message PingExperiment {
    repeated string ips = 1;
}

message HighMemoryAlarm {
    int64 memoryUsage = 1;
}

message GetNeighborsRequest {
    string streamPartId = 1;
}

message GetNeighborsResponse {
    repeated string neighbors = 1;
}

message StopNodeRequest {

}
