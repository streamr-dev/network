---
name: validate

on:
  push:
    branches:
      - main
      - brubeck
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: build-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: build
        uses: ./.github/workflows/reusable/cached-build
  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: build (cached)
        uses: ./.github/workflows/reusable/cached-build
      - run: npm run eslint
      - run: npm run versions
  test-utils:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: test-utils
  utils:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: utils
      command: |
        npm run test
        xvfb-run --auto-servernum npm run test-browser
  cdn-location:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: cdn-location
  geoip-location:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: geoip-location
  proto-rpc:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: proto-rpc
      command: |
        npm run test
        xvfb-run --auto-servernum npm run test-browser
  dht:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: dht
  dht-browser:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: dht
      command: |
        sudo apt-get install xvfb
        xvfb-run --auto-servernum npm run test-browser
  trackerless-network:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: trackerless-network
      command: |
        npm run test-unit
        npm run test-integration
        npm run test-end-to-end
  trackerless-network-browser:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: trackerless-network
      command: |
        sudo apt-get install xvfb
        xvfb-run --auto-servernum npm run test-browser
  autocertifier-server:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: autocertifier-server
  sdk:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: sdk
      command: |
        npm run test-unit
        npm run test-integration
  sdk-e2e:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: sdk
      docker-services: cassandra init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain
      run-entry-point: true
      run-nodes: true
      command: npm run test-end-to-end
  node:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: node
      command: npm run test-unit
  node-e2e:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: node
      docker-services: cassandra init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain
      run-entry-point: true
      command: npm run test-integration
  sdk-browser:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: sdk
      command: |
        sudo apt-get install xvfb
        xvfb-run --auto-servernum npm run test-browser-unit
        xvfb-run --auto-servernum npm run test-browser-integration
  sdk-browser-e2e:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: sdk
      extra-log-prefix: '-browser'
      docker-services: init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain
      run-entry-point: true
      run-nodes: true
      command: |
        sudo apt-get install xvfb
        xvfb-run --auto-servernum npm run test-browser-end-to-end
        npm run test-browser-smoke
  cli-tools:
    needs: build
    uses: ./.github/workflows/test-setup.yml
    with:
      package: cli-tools
      docker-services: cassandra init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain
      run-entry-point: true
      run-nodes: true
      command: npm run test
  node-docker-image:
    uses: ./.github/workflows/docker-build.yml
    with:
      docker_file: Dockerfile.node
      image_name: streamr/node
      test_services_to_start: cassandra init-keyspace dev-chain-fast deploy-network-subgraphs-fastchain broker-node-storage-1 entry-point
      build_platforms: linux/amd64
      test_script: bash ./.github/healthcheck.sh http://localhost:8891/info streamr-dev-broker-node-storage-1
